<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on Asif Mammadov's Personal Page</title><link>https://asifmv.com/blog/</link><description>Recent content in Blogs on Asif Mammadov's Personal Page</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Copyright Â© 2022</copyright><lastBuildDate>Sun, 20 Jun 2021 09:15:20 +0400</lastBuildDate><atom:link href="https://asifmv.com/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Setting Up Self-Signed Certificate on Windows</title><link>https://asifmv.com/blog/setting-up-self-signed-certificate-on-windows/</link><pubDate>Sun, 20 Jun 2021 09:15:20 +0400</pubDate><guid>https://asifmv.com/blog/setting-up-self-signed-certificate-on-windows/</guid><description>Self-signed certificates are public key certificates used in testing environments. They are not issued by Certificate Authority (CA) and thus do not provide any trust. Yet they are free and easy to create, which is an excellent option for testing applications with endpoints over HTTPS.
There are several ways to create a certificate on Windows: OpenSSL, makecert, Windows Certificate Manager (Certmgr), and Powershell&amp;rsquo;s New-SelfSignedCertificate cmdlet. I will use the latter in this post as it is built-in in Powershell and utilizes CLI.</description></item></channel></rss>